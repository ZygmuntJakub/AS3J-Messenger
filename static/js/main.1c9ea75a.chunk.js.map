{"version":3,"sources":["utils/constants.js","components/auth/RegisterForm.js","context/context.js","components/auth/LoginForm.js","components/auth/LoginPage.js","utils/authHeader.js","utils/userInfo.js","components/messages/Chat.js","components/messages/ChatList.js","components/user/EditUser.js","components/user/Users.js","components/messages/NewChat.js","components/main/MainPage.js","utils/styles.js","App.js","serviceWorker.js","index.js"],"names":["backendUrl","RegisterForm","React","useState","data","setData","isSuccessful","setIsSuccessful","isError","setIsError","Box","margin","animation","pad","align","Heading","size","Form","value","onChange","nextValue","onSubmit","axios","post","then","result","status","catch","e","Text","color","FormField","name","htmlfor","label","TextInput","id","type","direction","gap","Button","primary","AuthContext","createContext","useAuth","useContext","useUser","LoginForm","isLoggedIn","setLoggedIn","setAuthToken","setUser","to","headers","authorization","LoginPage","Main","background","opacity","basis","border","width","justify","alignSelf","authHeader","token","JSON","parse","localStorage","getItem","userInfo","user","Chat","chat","message","setMessage","messagesEndRef","useRef","socket","SockJS","stompClient","Stomp","over","scrollToBottom","current","scrollIntoView","behavior","useEffect","get","Authorization","messages","connect","frame","subscribe","push","body","alert","Grid","rows","columns","areas","start","end","top","round","overflow","gridArea","map","c","author","username","flex","avatar","Avatar","src","timestamp","nano","hour","minute","second","Date","toDateString","FormNext","horizontal","content","FormPrevious","ref","TextArea","resize","fill","placeholder","event","target","onClick","Send","ChatList","setChat","history","useHistory","uuid","chats","unshift","height","Table","TableHeader","TableRow","TableCell","TableBody","key","hoverIndicator","plain","focusIndicator","icon","secondary","lastMessage","chatUuid","active","EditUser","error","setError","success","setSuccess","setUsername","password","setPassword","passwordError","setPasswordError","avatarUuid","setAvatarUuid","FormData","append","files","res","patch","photoID","currentPassword","newPassword","retype","Users","users","setUsers","blacklist","setBlacklist","getUsers","getBlacklist","delete","NewChat","checkedUsers","setCheckedUsers","setName","CheckBox","checked","includes","splice","indexOf","length","usersUuid","MainPage","Sidebar","header","avatarPresent","footer","Logout","Nav","Group","Add","UserSettings","exact","path","component","theme","global","font","family","App","existingToken","authToken","Provider","setItem","stringify","clear","Grommet","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.1c9ea75a.chunk.js","sourcesContent":["export const backendUrl = 'http://34.69.28.200';","import React, {useState} from 'react';\nimport {Box, Heading, TextInput, Form, FormField, Button, Text} from \"grommet\";\nimport axios from \"axios\";\nimport {backendUrl} from \"../../utils/constants\";\n\n\nfunction RegisterForm() {\n\n    const [data, setData] = React.useState({});\n    const [isSuccessful, setIsSuccessful] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    const register = () => {\n        setIsSuccessful(false);\n        setIsError(false);\n        axios.post(`${backendUrl}/users`, {\n            ...data\n        }).then(result => {\n            if (result.status === 200) {\n                setIsSuccessful(true);\n            } else {\n                setIsError(true);\n            }\n        }).catch(e => {\n            setIsError(true);\n        });\n        setData({});\n    }\n\n    return (\n        <Box\n            margin={\"medium\"}\n            animation={\"fadeIn\"}\n            pad={\"large\"}\n            align={\"center\"}\n        >\n            <Heading size={\"small\"}>Sign Up</Heading>\n            <Form\n                value={data}\n                onChange={nextValue => setData(nextValue)}\n                onSubmit={register}\n            >\n                {isSuccessful && (<Text color={\"green\"}>Registration was successful</Text>)}\n                {isError && (<Text color={\"red\"}>Error with request</Text>)}\n                <FormField name=\"username\" htmlfor=\"username\" label=\"username\">\n                    <TextInput id=\"username\" name=\"username\"/>\n                </FormField>\n                <FormField name=\"email\" htmlfor=\"email\" label=\"email\">\n                    <TextInput id=\"email\" name=\"email\"/>\n                </FormField>\n                <FormField name=\"password\" htmlfor=\"password\" label=\"password\">\n                    <TextInput type={\"password\"} id=\"password\" name=\"password\"/>\n                </FormField>\n                <Box direction=\"row\" gap=\"medium\">\n                    <Button type=\"submit\" primary label=\"Submit\"/>\n                </Box>\n            </Form>\n        </Box>\n\n    );\n}\n\nexport default RegisterForm;","import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function useUser() {\n    return useContext(AuthContext);\n}","import React, {useState} from 'react';\nimport {Box, Heading, TextInput, Form, FormField, Button, Text} from \"grommet\";\nimport {backendUrl} from \"../../utils/constants\";\nimport {useAuth, useUser} from \"../../context/context\";\nimport axios from 'axios';\nimport {Redirect} from \"react-router\";\n\n\nfunction LoginForm() {\n    const [data, setData] = React.useState({});\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const { setAuthToken } = useAuth();\n    const { setUser } = useUser();\n\n    const login = () => {\n        axios.post(`${backendUrl}/auth/login`, {\n            ...data\n        }).then(result => {\n            if (result.status === 200) {\n                setUser(result.data);\n                setAuthToken(result.headers.authorization);\n                setLoggedIn(true);\n            } else {\n                setIsError(true);\n            }\n        }).catch(e => {\n            setIsError(true);\n        });\n    }\n\n    if (isLoggedIn) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n\n        <Box\n            margin={\"medium\"}\n            animation={\"fadeIn\"}\n            pad={\"large\"}\n            align={\"center\"}\n            gap={\"small\"}\n        >\n            <Heading size={\"small\"}>Sign In</Heading>\n            <Form\n                value={data}\n                onChange={nextValue => setData(nextValue)}\n                onSubmit={login}\n            >\n                {isError && (<Text color={\"red\"}>Error with request</Text>)}\n                <FormField name=\"email\" htmlfor=\"email\" label=\"email\">\n                    <TextInput id=\"email\" name=\"email\" />\n                </FormField>\n                <FormField name=\"password\" htmlfor=\"password\" label=\"password\">\n                    <TextInput id=\"password\" name=\"password\" type={\"password\"}/>\n                </FormField>\n                <Box direction=\"row\" gap=\"medium\">\n                    <Button type=\"submit\" primary label=\"Submit\" />\n                </Box>\n            </Form>\n        </Box>\n\n    );\n}\n\nexport default LoginForm;","import React from 'react';\nimport {Box, Main} from \"grommet\";\nimport RegisterForm from \"./RegisterForm\";\nimport LoginForm from \"./LoginForm\";\n\nfunction LoginPage() {\n\n    return (\n        <Main background={\n            {\n                \"opacity\": true,\n                \"position\": \"bottom\",\n                \"repeat\": \"no-repeat\",\n                \"size\": \"cover\",\n                \"image\": \"url(https://i.ibb.co/fxR0kLt/bgc.jpg)\"\n            }\n        }>\n            <Box\n                background={{\n                    color: \"light-1\",\n                    opacity: \"strong\"\n                }}\n                margin={{\n                    \"vertical\": \"5vw\",\n                }}\n                basis={\"large\"}\n                direction={\"row\"}\n                border={{color: 'brand', size: 'large'}}\n                animation={\"fadeIn\"}\n                pad={\"small\"}\n                width={\"xlarge\"}\n                justify={\"center\"}\n                alignSelf={\"center\"}\n            >\n                <RegisterForm/>\n                <LoginForm/>\n            </Box>\n\n        </Main>\n    );\n}\n\nexport default LoginPage;","export default function authHeader() {\n    const token = JSON.parse(localStorage.getItem('token'));\n\n    if (token) {\n        return token;\n    }\n    return \"\";\n}","export default function userInfo() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n        return user;\n    }\n    return {};\n}","import React, {useEffect, useRef, useState} from 'react';\nimport {Avatar, Box, Button, Grid, Text, TextArea} from \"grommet\";\nimport axios from \"axios\";\nimport {backendUrl} from \"../../utils/constants\";\nimport authHeader from \"../../utils/authHeader\";\nimport {useAuth} from \"../../context/context\";\nimport userInfo from \"../../utils/userInfo\";\nimport {FormNext, FormPrevious, Send} from \"grommet-icons\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\n\n\nexport const Chat = ({chat}) => {\n    const [data, setData] = useState([]);\n    const [message, setMessage] = React.useState(\"\");\n    const {setAuthToken} = useAuth();\n    const messagesEndRef = useRef(null);\n    const socket = new SockJS(`${backendUrl}/ws`);\n    const stompClient = Stomp.over(socket);\n    const scrollToBottom = () => {\n        messagesEndRef.current.scrollIntoView({behavior: \"smooth\"});\n    };\n\n    const stompClientConnect = (messages) => {\n        stompClient.connect({}, frame => {\n            stompClient.subscribe(`/messages/add/${chat}`, message => {\n                messages.push(JSON.parse(message.body))\n                setData(() => [\n                    ...messages,\n                ])\n            });\n        });\n    }\n\n    useEffect(() => {\n        axios.get(`${backendUrl}/chats/${chat}`, {headers: {Authorization: authHeader()}}).then(result => {\n            setAuthToken(result.headers.authorization);\n            setData(result.data);\n            stompClientConnect(result.data);\n        }).catch(e => {\n            alert(e);\n        });\n        scrollToBottom();\n\n    }, [chat, setAuthToken]);\n\n    useEffect(scrollToBottom, [data]);\n\n    const handleSubmit = () => {\n        axios.post(`${backendUrl}/chats/${chat}/messages`,\n            {\n                value: message\n            },\n            {headers: {Authorization: authHeader()}})\n            .catch(e => {\n                alert(e);\n            });\n        setMessage(\"\");\n    }\n\n\n    return (\n        <Box pad={\"medium\"}>\n            <Grid\n                pad={'20px'}\n                rows={['80vh', '20%']}\n                columns={['100%']}\n                gap=\"small\"\n                areas={[\n                    {name: 'messages', start: [0, 0], end: [0, 0]},\n                    {name: 'send', start: [0, 1], end: [0, 1]},\n                ]}\n            >\n                {data && (\n                    <Box\n                        margin={{top: \"large\"}}\n                        round\n                        overflow={\"auto\"}\n                        gridArea=\"messages\"\n                        background=\"light-1\">\n                        {data.map((c) => (\n                            <>\n                                {c.author !== userInfo().username ? (\n                                    <Box direction={\"row\"} flex={false} basis={\"80px\"} animation={\"fadeIn\"}\n                                         margin={\"xsmall\"} round\n                                         pad={\"small\"} background=\"light-3\"\n                                         align={\"center\"}\n                                    >\n                                        <Box align={\"center\"}>\n                                            {c.avatar ? (\n                                                <Avatar size={\"small\"}\n                                                        src={`https://storage.cloud.google.com/as3j-messenger/${c.avatar}.png`}/>\n                                            ) : (\n                                                <Avatar size={\"small\"}\n                                                        src=\"https://innostudio.de/fileuploader/images/default-avatar.png\"/>\n                                            )}\n                                            <Text size={\"11px\"}>{c.author}</Text>\n                                            <Text size={\"11px\"}>\n                                                {!c.timestamp.nano ?\n                                                    new Date(c.timestamp).toDateString() :\n                                                    c.timestamp.hour + \":\" + c.timestamp.minute + \":\" + c.timestamp.second\n                                                }\n                                            </Text>\n                                        </Box>\n                                        <FormNext />\n                                        <Box margin={{horizontal: \"small\"}}>\n                                            <Text>{c.content}</Text>\n                                        </Box>\n                                    </Box>\n                                ) : (\n                                    <Box direction={\"row\"} justify={\"end\"} flex={false} basis={\"80px\"} animation={\"fadeIn\"} margin={\"xsmall\"} round\n                                         pad={\"small\"} background=\"brand\"\n                                         align={\"center\"}>\n                                        <Box margin={{horizontal: \"small\"}}>\n                                            <Text>{c.content}</Text>\n                                        </Box>\n                                        <FormPrevious />\n                                        <Box align={\"center\"}>\n                                            {c.avatar ? (\n                                                <Avatar size={\"small\"}\n                                                        src={`https://storage.cloud.google.com/as3j-messenger/${c.avatar}.png`}/>\n                                            ) : (\n                                                <Avatar size={\"small\"}\n                                                        src=\"https://innostudio.de/fileuploader/images/default-avatar.png\"/>\n                                            )}\n                                            <Text size={\"11px\"}>You</Text>\n                                            <Text size={\"11px\"}>\n                                                {!c.timestamp.nano ?\n                                                    new Date(c.timestamp).toDateString() :\n                                                    c.timestamp.hour + \":\" + c.timestamp.minute + \":\" + c.timestamp.second\n                                                }\n                                            </Text>\n                                        </Box>\n                                    </Box>\n                                )}\n                            </>\n                        ))}\n                        <div ref={messagesEndRef}/>\n                    </Box>\n                )}\n                <Box round pad={\"small\"} animation={\"fadeIn\"} margin={\"xxsmall\"} gridArea=\"send\" background=\"light-1\">\n                    <TextArea\n                        resize={false}\n                        fill\n                        placeholder=\"type here\"\n                        value={message}\n                        onChange={event => setMessage(event.target.value)}\n                    />\n                    <Button\n                        type={\"submit\"}\n                        gap={\"small\"}\n                        margin={\"small\"}\n                        size={\"medium\"}\n                        onClick={handleSubmit}\n                    >\n                        <Send/><Text margin={\"small\"}>Send</Text>\n                    </Button>\n                </Box>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default Chat;","import React, {useEffect} from 'react';\nimport {Box, Button, Table, TableBody, TableCell, TableHeader, TableRow, Text} from \"grommet\";\nimport {FormNext} from 'grommet-icons';\nimport axios from \"axios\";\nimport {backendUrl} from \"../../utils/constants\";\nimport authHeader from \"../../utils/authHeader\";\nimport {useHistory} from \"react-router-dom\";\nimport {useAuth} from \"../../context/context\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport Chat from \"./Chat\";\nimport userInfo from \"../../utils/userInfo\";\n\nfunction ChatList() {\n    const [data, setData] = React.useState([]);\n    const [chat, setChat] = React.useState('');\n    const {setAuthToken} = useAuth();\n    const history = useHistory();\n    const socket = new SockJS(`${backendUrl}/ws`);\n    const stompClient = Stomp.over(socket);\n\n    useEffect(() => {\n        axios.get(`${backendUrl}/chats`, {headers: {Authorization: authHeader()}}).then(result => {\n            setData(result.data)\n            setAuthToken(result.headers.authorization);\n            stompClient.connect({}, frame => {\n                stompClient.subscribe(`/chats/add/${userInfo().uuid}`, message => {\n                    const chats = result.data;\n                    chats.unshift(JSON.parse(message.body))\n                    setData(() => [\n                        ...chats\n                    ]);\n                });\n            });\n        }).catch(e => {\n            history.push(\"/login\")\n        });\n    }, [history,setAuthToken]);\n\n    return (\n        <>\n            <Box width={\"400px\"} overflow={\"auto\"} height=\"100vh\">\n                <Table >\n                    <TableHeader>\n                        <TableRow>\n                            <TableCell><Text color={\"brand\"}>Chats</Text></TableCell>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                        {data && data.map((c) => {\n                            return (\n                                <TableRow key={c.name}>\n                                    <TableCell>\n                                        <Button\n                                            hoverIndicator={true}\n                                            plain\n                                            focusIndicator={false}\n                                            color={\"brand\"}\n                                            icon={<FormNext/>}\n                                            secondary\n                                            key={c.name}\n                                            label={\n                                                <Box pad={\"medium\"}>\n                                                    <Text size={\"small\"}>{c.name}</Text>\n                                                    <Text size={\"xsmall\"}>{c.lastMessage}</Text>\n                                                    <Text\n                                                        size={\"xsmall\"}>\n                                                        {c.timestamp.nano ?\n                                                            c.timestamp.hour + \":\" + c.timestamp.minute + \":\" + c.timestamp.second :\n                                                            new Date(c.timestamp).toDateString()}\n                                                    </Text>\n                                                </Box>}\n                                            onClick={() => setChat(c.chatUuid)}\n                                            active={chat === c.chatUuid}\n                                        >\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })}\n                    </TableBody>\n                </Table>\n            </Box>\n            <Box overflow={\"hidden\"} animation={\"fadeIn\"} height=\"100vh\" width={\"100%\"} background={'brand'}>\n                {chat ? (\n                    <Chat chat={chat} />\n                ) : (\n                    <Box fill align={\"center\"} justify={\"center\"} direction={\"row\"}>\n                        <Text size={\"xxlarge\"}>Select chat</Text>\n                    </Box>\n                )}\n            </Box>\n        </>\n    );\n}\n\nexport default ChatList;","import React from 'react';\nimport {Box, Button, Form, FormField, Heading, Text, TextInput} from \"grommet\";\nimport axios from \"axios\";\nimport {backendUrl} from \"../../utils/constants\";\nimport authHeader from \"../../utils/authHeader\";\nimport {useUser} from \"../../context/context\";\n\n\nconst EditUser = () => {\n    const [error, setError] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const [username, setUsername] = React.useState({});\n    const [password, setPassword] = React.useState({});\n    const [passwordError, setPasswordError] = React.useState(false);\n    const [avatarUuid, setAvatarUuid] = React.useState('');\n    const {setUser} = useUser();\n\n    const onChangeHandler = event => {\n        const data = new FormData();\n        data.append('file', event.target.files[0])\n        axios.post(`${backendUrl}/files/avatars`,\n            data, {headers: {Authorization: authHeader()}})\n            .then((res) => {\n                setAvatarUuid(res.data.value);\n            })\n            .catch(e => {\n                alert(e);\n            });\n    };\n\n    const onUsernameSubmitHandler = (data) => {\n        if (!data.username) {\n            setError(true);\n            return;\n        }\n        axios.patch(`${backendUrl}/users`,\n            {...data, photoID: avatarUuid}, {headers: {Authorization: authHeader()}})\n            .then((res) => {\n                setUser(res.data);\n                setSuccess(true);\n                setUsername({})\n            })\n            .catch(e => {\n                alert(e);\n            });\n    }\n\n    const onPasswordSubmitHandler = (data) => {\n        if (data.currentPassword && data.newPassword && data.retype){\n            if(data.newPassword === data.retype){\n                axios.patch(`${backendUrl}/users/password`,\n                    {...data}, {headers: {Authorization: authHeader()}})\n                    .then((res) => {\n                        setUser(res.data);\n                        setSuccess(true);\n                        setPassword({})\n                    })\n                    .catch(e => {\n                        alert(e);\n                    });\n            } else {\n                setPasswordError(true);\n            }\n        } else {\n            setError(true)\n        }\n\n    }\n\n\n    return (\n        <Box animation={\"fadeIn\"} pad={\"medium\"} fill direction={\"column\"} align={\"center\"}>\n            {success && (<Text color={\"green\"}>success</Text>)}\n            {error && (<Text color={\"red\"}>fill data</Text>)}\n            <Heading alignSelf={\"center\"} size={\"xsmall\"}>edit account</Heading>\n            <Box fill justify={\"around\"} direction={\"row\"} width={\"100%\"} align={\"center\"}>\n                <Box align={\"center\"} direction={\"column\"}>\n                    <Text>upload avatar</Text>\n                    <Box margin={\"medium\"}>\n                        <input type=\"file\" name=\"file\" onChange={onChangeHandler}/>\n                    </Box>\n                </Box>\n                <Box direction={\"column\"} align={\"center\"}>\n                    <Box margin={\"medium\"}>\n                        <Form\n                            value={username}\n                            onChange={nextValue => setUsername(nextValue)}\n                            onSubmit={({value}) => {\n                                onUsernameSubmitHandler(value)\n                            }}\n                        >\n                            <FormField name=\"username\" htmlfor=\"username-input\" label=\"username\">\n                                <TextInput id=\"username-input\" name=\"username\"/>\n                            </FormField>\n                            <Box direction=\"row\" gap=\"medium\">\n                                <Button type=\"submit\" primary label=\"Submit\"/>\n                            </Box>\n                        </Form>\n                    </Box>\n                </Box>\n            </Box>\n            <Heading alignSelf={\"center\"} size={\"xsmall\"}>change password</Heading>\n            {passwordError && (<Text color={\"red\"}>new passwords are not the same</Text>)}\n            <Box>\n                <Form\n                    value={password}\n                    onChange={nextValue => setPassword(nextValue)}\n                    onSubmit={({value}) => {\n                        onPasswordSubmitHandler(value)\n                    }}\n                >\n                    <FormField name=\"currentPassword\" htmlfor=\"currentPassword-input\" label=\"current password\">\n                        <TextInput type={\"password\"} id=\"currentPassword-input\" name=\"currentPassword\"/>\n                    </FormField>\n                    <FormField name=\"newPassword\" htmlfor=\"newPassword-input\" label=\"new password\">\n                        <TextInput type={\"password\"} id=\"newPassword-input\" name=\"newPassword\"/>\n                    </FormField>\n                    <FormField name=\"retype\" htmlfor=\"retype-input\" label=\"retype new password\">\n                        <TextInput type={\"password\"} id=\"retype-input\" name=\"retype\"/>\n                    </FormField>\n                    <Box direction=\"row\" gap=\"medium\">\n                        <Button type=\"submit\" primary label=\"Submit\"/>\n                    </Box>\n                </Form>\n            </Box>\n        </Box>\n    );\n};\n\nexport default EditUser;","import React, {useEffect} from 'react';\nimport axios from \"axios\";\nimport {backendUrl} from \"../../utils/constants\";\nimport authHeader from \"../../utils/authHeader\";\nimport {useAuth} from \"../../context/context\";\nimport {useHistory} from \"react-router-dom\";\nimport {Box, Button, Table, TableBody, TableCell, TableHeader, TableRow, Text} from \"grommet\";\n\n\nconst Users = () => {\n\n        const [users, setUsers] = React.useState([]);\n        const [blacklist, setBlacklist] = React.useState([]);\n        const {setAuthToken} = useAuth();\n        const history = useHistory();\n\n        const getUsers = () => {\n            axios.get(`${backendUrl}/users`, {headers: {Authorization: authHeader()}}).then(result => {\n                setUsers(result.data)\n                setAuthToken(result.headers.authorization);\n            }).catch(e => {\n                alert(e);\n            });\n        }\n\n        const getBlacklist = () => {\n            axios.get(`${backendUrl}/blacklists`, {headers: {Authorization: authHeader()}}).then(result => {\n                setBlacklist(result.data)\n                setAuthToken(result.headers.authorization);\n            }).catch(e => {\n                history.push(\"/login\")\n            });\n        }\n\n        useEffect(() => {\n            getUsers();\n            getBlacklist();\n\n        }, [history, setAuthToken])\n        return (\n            <Box animation={\"fadeIn\"} direction={\"row\"} pad={\"small\"} justify={\"around\"} fill>\n                <Box width={\"medium\"}>\n                    <Table height=\"100vh\">\n                        <TableHeader>\n                            <TableRow>\n                                <TableCell><Text color={\"brand\"}>Users</Text></TableCell>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {users && users.map((user) => {\n                                return (\n                                    <TableRow key={user.uuid}>\n                                        <TableCell>\n                                            <Box justify={\"between\"} direction={\"row\"} plain>\n                                                <Text size={\"small\"}>{user.username}</Text>\n                                                <Button\n                                                    size={\"small\"}\n                                                    label=\"block\"\n                                                    onClick={() => {\n                                                        axios.post(`${backendUrl}/blacklists/${user.uuid}`, {},\n                                                            {headers: {Authorization: authHeader()}}).then(result => {\n                                                            setUsers(result.data);\n                                                            getUsers();\n                                                            getBlacklist();\n                                                        }).catch(e => {\n                                                            alert(e);\n                                                        });\n                                                    }}\n                                                />\n                                            </Box>\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            })}\n                        </TableBody>\n                    </Table>\n                </Box>\n                <Box width={\"medium\"}>\n                    <Table height=\"100vh\">\n                        <TableHeader>\n                            <TableRow>\n                                <TableCell><Text color={\"brand\"}>Blacklist</Text></TableCell>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {blacklist && blacklist.map((user) => {\n                                return (\n                                    <TableRow key={user.uuid}>\n                                        <TableCell>\n                                            <Box justify={\"between\"} direction={\"row\"} plain>\n                                                <Text size={\"small\"}>{user.username}</Text>\n                                                <Button\n                                                    size={\"small\"}\n                                                    label=\"unblock\"\n                                                    onClick={() => {\n                                                        axios.delete(`${backendUrl}/blacklists/${user.uuid}`,\n                                                            {headers: {Authorization: authHeader()}}).then(result => {\n                                                            setUsers(result.data);\n                                                            getUsers();\n                                                            getBlacklist();\n                                                        }).catch(e => {\n                                                            alert(e);\n                                                        });\n                                                    }}\n                                                />\n                                            </Box>\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            })}\n                        </TableBody>\n                    </Table>\n                </Box>\n            </Box>\n        );\n    }\n;\n\nexport default Users;","import React, {useEffect} from 'react';\nimport {Box, Button, CheckBox, Heading, Text, TextInput} from \"grommet\";\nimport axios from \"axios\";\nimport {backendUrl} from \"../../utils/constants\";\nimport authHeader from \"../../utils/authHeader\";\nimport {useAuth} from \"../../context/context\";\nimport userInfo from \"../../utils/userInfo\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst NewChat = () => {\n\n    const [users, setUsers] = React.useState([]);\n    const [checkedUsers, setCheckedUsers] = React.useState([userInfo().uuid]);\n    const [name, setName] = React.useState('');\n    const [error, setError] = React.useState(false);\n    const {setAuthToken} = useAuth();\n    const history = useHistory();\n\n    useEffect(() => {\n        axios.get(`${backendUrl}/users`, {headers: {Authorization: authHeader()}}).then(result => {\n            setUsers(result.data)\n            setAuthToken(result.headers.authorization);\n        }).catch(e => {\n            alert(e);\n        });\n    }, []);\n\n\n    const handleSubmit = () => {\n        if (name === '' || checkedUsers.length === 0) {\n            setError(true);\n            return;\n        }\n        axios.post(`${backendUrl}/chats`,\n            {\n                name: name,\n                usersUuid: checkedUsers,\n            }\n        ,{headers: {Authorization: authHeader()}}).then(result => {\n            setUsers(result.data);\n            setAuthToken(result.headers.authorization);\n            history.push(\"/messages\");\n        }).catch(e => {\n            alert(e);\n        });\n    }\n\n    return (\n        <Box animation={\"fadeIn\"} direction={\"column\"} width={\"100%\"} align={\"center\"}>\n            <Heading alignSelf={\"center\"} size={\"xsmall\"}>add new chat</Heading>\n            {error && (<Text color={\"red\"}>fill data</Text>)}\n            <Box direction={\"row\"}>\n                <Box margin={\"medium\"}>\n                    {users && users.map((user) => (\n                        <CheckBox\n                            key={user.uuid}\n                            checked={checkedUsers.includes(user.uuid)}\n                            label={user.username}\n                            onChange={(event) => {\n                                event.target.checked ?\n                                    setCheckedUsers([...checkedUsers, user.uuid]) :\n                                    setCheckedUsers([checkedUsers.splice(checkedUsers.indexOf(user.uuid), 1)])\n                            }}\n                        />\n                    ))}\n                </Box>\n                <Box margin={\"medium\"}>\n                    <TextInput\n                        placeholder=\"type name\"\n                        value={name}\n                        onChange={event => setName(event.target.value)}\n                    />\n                </Box>\n            </Box>\n            <Button\n                label=\"create\"\n                onClick={handleSubmit}\n            />\n        </Box>\n    )\n};\n\nexport default NewChat;\n\n","import React from 'react';\nimport {useAuth} from \"../../context/context\";\nimport {Avatar, Box, Button, Nav, Sidebar, Text} from \"grommet\";\nimport {Add, Chat, Group, Logout, UserSettings} from 'grommet-icons';\nimport ChatList from \"../messages/ChatList\";\nimport {Route, Switch, useHistory} from \"react-router-dom\";\nimport EditUser from \"../user/EditUser\";\nimport Users from \"../user/Users\";\nimport NewChat from \"../messages/NewChat\";\nimport userInfo from \"../../utils/userInfo\";\n\nfunction MainPage() {\n    const {setAuthToken} = useAuth();\n\n    const logout = () => {\n        setAuthToken();\n    }\n\n    const history = useHistory();\n\n    return (\n        <Box direction={\"row\"} animation={\"fadeIn\"}>\n            <Sidebar width={\"300px\"} background=\"brand\" height=\"100vh\"\n                     header={\n                         <Box direction={\"row\"}>\n                             {userInfo().avatarPresent ? (\n                                 <Avatar src={`https://storage.cloud.google.com/as3j-messenger/${userInfo().uuid}.png`}/>\n                             ) : (\n                                 <Avatar src=\"https://innostudio.de/fileuploader/images/default-avatar.png\"/>\n                             )}\n                             <Text margin={\"small\"}>{userInfo().username}</Text>\n                         </Box>\n                     }\n                     footer={\n                         <Button icon={<Logout/>} label={\"logout\"} onClick={logout} hoverIndicator/>\n                     }\n            >\n                <Nav gap=\"small\">\n                    <Button icon={<Chat/>} label={\"messages\"} onClick={() => history.push(\"/messages\")} />\n                    <Button icon={<Group/>} label={\"users\"} onClick={() => history.push(\"/users\")}/>\n                    <Button icon={<Add/>} label={\"new chat\"} onClick={() => history.push(\"/new-chat\")}/>\n                    <Button icon={<UserSettings/>} label={\"account\"} onClick={() => history.push(\"/account\")}/>\n                </Nav>\n            </Sidebar>\n\n\n            <Switch>\n                <Route exact path=\"/messages\" component={ChatList}/>\n                <Route exact path=\"/users\" component={Users}/>\n                <Route exact path=\"/account\" component={EditUser}/>\n                <Route exact path=\"/new-chat\" component={NewChat}/>\n            </Switch>\n        </Box>\n    );\n}\n\nexport default MainPage;","export const theme = {\n    global: {\n        font: {\n            family: 'Roboto',\n            size: '18px',\n            height: '20px',\n        },\n    },\n};","import React, {useState} from 'react';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\nimport LoginPage from \"./components/auth/LoginPage\";\nimport MainPage from \"./components/main/MainPage\";\nimport {AuthContext} from \"./context/context\";\nimport {Grommet} from 'grommet';\nimport {theme} from \"./utils/styles\";\n\nfunction App() {\n    const existingToken = JSON.parse(localStorage.getItem(\"token\"));\n    const [authToken, setAuthToken] = useState(existingToken);\n    const [user, setUser] = useState(existingToken);\n\n    const setToken = (data) => {\n        data ? localStorage.setItem(\"token\", JSON.stringify(data)) :\n            localStorage.clear();\n        setAuthToken(data);\n    }\n\n    const setUserState = (data) => {\n        data ? localStorage.setItem(\"user\", JSON.stringify(data)) :\n            localStorage.clear();\n        setUser(data);\n    }\n\n    return (\n        <AuthContext.Provider value={{authToken, setAuthToken: setToken, user, setUser: setUserState}}>\n            <Grommet plain theme={theme}>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/login\" component={LoginPage}/>\n                        <Route path=\"/\" render={() => authToken ? (\n                            <MainPage/>\n                        ) : (\n                            <Redirect to=\"/login\"/>\n                        )}/>\n                    </Switch>\n\n                </Router>\n            </Grommet>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}